{"ast":null,"code":"var _jsxFileName = \"/home/antorou/code/Antorou/recettes/frontend/src/components/RecipeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport RecipeCard from './RecipeCard';\nimport '../styles/RecipeList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeList = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/recipes') // L'URL de ton API backend\n    .then(response => setRecipes(response.data)).catch(error => console.error(\"Erreur de chargement:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-list\",\n      children: filteredRecipes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucune recette trouv\\xE9e.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this) : filteredRecipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeCard, {\n        recipe: recipe,\n        onDelete: onDelete\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeList, \"xBkrk5r3hhKgEpMO+HGI7yKr/O8=\");\n_c = RecipeList;\nexport default RecipeList;\nvar _c;\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"names":["React","useState","axios","RecipeCard","jsxDEV","_jsxDEV","RecipeList","_s","recipes","setRecipes","useEffect","get","then","response","data","catch","error","console","className","children","filteredRecipes","length","fileName","_jsxFileName","lineNumber","columnNumber","map","recipe","onDelete","id","_c","$RefreshReg$"],"sources":["/home/antorou/code/Antorou/recettes/frontend/src/components/RecipeList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport RecipeCard from './RecipeCard';\nimport '../styles/RecipeList.css';\n\n\nconst RecipeList = () => {\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/recipes') // L'URL de ton API backend\n      .then(response => setRecipes(response.data))\n      .catch(error => console.error(\"Erreur de chargement:\", error));\n  }, []);\n\n  return (\n    <div className=\"recipe-container\">\n      \n\n      <div className=\"recipe-list\">\n        {filteredRecipes.length === 0 ? (\n          <p>Aucune recette trouv√©e.</p>\n        ) : (\n          filteredRecipes.map((recipe) => (\n            <RecipeCard key={recipe.id} recipe={recipe} onDelete={onDelete} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CS,SAAS,CAAC,MAAM;IACdR,KAAK,CAACS,GAAG,CAAC,mCAAmC,CAAC,CAAC;IAAA,CAC5CC,IAAI,CAACC,QAAQ,IAAIJ,UAAU,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKa,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAG/Bd,OAAA;MAAKa,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBC,eAAe,CAACC,MAAM,KAAK,CAAC,gBAC3BhB,OAAA;QAAAc,QAAA,EAAG;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE9BL,eAAe,CAACM,GAAG,CAAEC,MAAM,iBACzBtB,OAAA,CAACF,UAAU;QAAiBwB,MAAM,EAAEA,MAAO;QAACC,QAAQ,EAAEA;MAAS,GAA9CD,MAAM,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CAClE;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAxBID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AA0BhB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}